{"version":3,"sources":["webpack://ElementUtil/webpack/universalModuleDefinition","webpack://ElementUtil/webpack/bootstrap","webpack://ElementUtil/./src/classes/element-filter.ts","webpack://ElementUtil/./src/classes/element-sorter.ts","webpack://ElementUtil/./src/element-util.ts","webpack://ElementUtil/./src/methods/base.ts","webpack://ElementUtil/./src/methods/util.ts"],"names":[],"mappings":"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","file":"element-util.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ElementUtil\"] = factory();\n\telse\n\t\troot[\"ElementUtil\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/element-util.ts\");\n","import { ElementTarget, getElements, nodeListToArray } from '../methods/base';\r\nimport { hide, show } from '../methods/util';\r\n\r\nexport interface FilterOptions {\r\n  /** Enable to use `innerHTML`. Default is false, and than use `textContent`. */\r\n  enableHTML?: boolean;\r\n}\r\n\r\n/**\r\n * Filtering elements. (helper method)\r\n * @param  selector   querySelector\r\n * @param  str     filter string.\r\n * @param  enableHTML using .innerHTML, default is false.\r\n * @return            Hit number.\r\n */\r\nexport function filter(selector: ElementTarget, str: string = '', enableHTML: boolean = false): number {\r\n  const f = new ElementFilter(selector, str, { enableHTML });\r\n  return f.execute().hit;\r\n}\r\n\r\nexport class ElementFilter {\r\n  elms: NodeList;\r\n  filter: string;\r\n  hit: number = 0;\r\n  options: FilterOptions;\r\n\r\n  /**\r\n   * constructor\r\n   * @param selector target elements.\r\n   * @param str   a string for filtering.\r\n   * @param options  enableHTML?: boolean\r\n   */\r\n  constructor(selector: ElementTarget, str: string = '', options: FilterOptions = {}) {\r\n    this.elms = getElements(selector);\r\n    this.filter = str;\r\n    this.options = this.getDefaultOptions();\r\n    this.setOptions(options);\r\n  }\r\n\r\n  /**\r\n   * getDefaultOptions\r\n   * @return filter options object.\r\n   */\r\n  getDefaultOptions(): FilterOptions {\r\n    return {\r\n      enableHTML: false,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * setOptions\r\n   * @param  options enableHTML?: boolean\r\n   * @return\r\n   */\r\n  setOptions(options: FilterOptions) {\r\n    this.options = {\r\n      ...this.options,\r\n      ...options,\r\n    };\r\n  }\r\n\r\n  /**\r\n   * setFilter\r\n   * @param  filter a string for filtering.\r\n   * @return\r\n   */\r\n  setFilter(str: string): this {\r\n    this.filter = str;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * get hit property.\r\n   * @return\r\n   */\r\n  getHit(): number {\r\n    return this.hit;\r\n  }\r\n\r\n  /**\r\n   * Executes filtering.\r\n   * @return\r\n   */\r\n  execute(): this {\r\n    if (this.elmsIsTable()) {\r\n      this.filteringTable();\r\n    } else {\r\n      this.filteringNodes(this.elms);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  private filteringTable(): void {\r\n    const table = this.elms[0] as HTMLElement;\r\n    const tableRows = getElements('tbody tr', table);\r\n    this.filteringNodes(tableRows);\r\n  }\r\n\r\n  private filteringNodes(nodes: NodeList): void {\r\n    this.hit = 0;\r\n    const str = this.filter.toUpperCase();\r\n    const elms = nodeListToArray(nodes) as HTMLElement[];\r\n\r\n    for (const elm of elms) {\r\n      const content = this.options.enableHTML\r\n        ? elm.innerHTML\r\n        : elm.textContent;\r\n      if (content.toUpperCase().indexOf(str) === -1) {\r\n        hide(elm);\r\n      } else {\r\n        show(elm);\r\n        this.hit++;\r\n      }\r\n    }\r\n  }\r\n\r\n  private elmsIsTable(): boolean {\r\n    const elm = this.elms[0] as HTMLElement;\r\n    return this.elms.length === 1 && elm.tagName === 'TABLE';\r\n  }\r\n}\r\n","import {\r\n  ElementTarget,\r\n  getElement,\r\n  getElementsAsArray,\r\n  nodeListToArray,\r\n} from '../methods/base';\r\n\r\n/** Types that can be as target items. */\r\nexport type ItemsSettable = string|NodeList|HTMLElement[];\r\n\r\nexport interface DatasetNames {\r\n  /** Default value is `sortDirection`. It means `data-sort-direction` attribute in html. */\r\n  sortDirection?: string;\r\n  /** Default value is `sortType`. It means `data-sort-type` attribute in html. */\r\n  sortType?: string;\r\n  /** Default value is `sortValue`. It means `data-sort-value` attribute in html. */\r\n  sortValue?: string;\r\n}\r\n\r\nexport interface SorterOptions {\r\n  /** Target elements for sorting. */\r\n  items?: ItemsSettable;\r\n  /** Specifying dataset names. type, value and direction. */\r\n  datasetName?: DatasetNames;\r\n}\r\n\r\n/**\r\n * Sorting elements. (helper method)\r\n * @param  elm     base element.\r\n * @param  options options for ElementSorter.\r\n * @return         sorted elements.\r\n */\r\nexport function sort(elm: ElementTarget, options: SorterOptions = {}): HTMLElement[] {\r\n  const s = new ElementSorter(elm, options);\r\n  return s.execute().getItems();\r\n}\r\n\r\nexport class ElementSorter {\r\n  elm: HTMLElement;\r\n  items: HTMLElement[];\r\n  options: SorterOptions;\r\n\r\n  /**\r\n   * constructor\r\n   * @param elm     Base element. e.g. `<ul>`, `<ol>` or `<table>`..\r\n   * @param options items: 'auto'|selector|NodeList, datasetName: object\r\n   */\r\n  constructor(elm: ElementTarget, options: SorterOptions = {}) {\r\n    this.options = this.getDefaultOptions();\r\n    this.setOptions(options);\r\n    this.setElement(elm);\r\n    this.setItems(this.options.items);\r\n  }\r\n\r\n  /**\r\n   * getDefaultOptions\r\n   * @return\r\n   */\r\n  getDefaultOptions(): SorterOptions {\r\n    return {\r\n      items: 'auto', // Items selector: 'auto' | selector | NodeList | Array\r\n      datasetName: {\r\n        sortDirection: 'sortDirection', // data-sort-direction: 'asc' | 'desc'\r\n        sortType: 'sortType', // data-sort-type: 'string' | 'number' | 'date'\r\n        sortValue: 'sortValue', // data-sort-value\r\n      },\r\n    };\r\n  }\r\n\r\n  /**\r\n   * setOptions\r\n   * @param  options items: 'auto'|selector|NodeList, datasetName: object\r\n   * @return\r\n   */\r\n  setOptions(options: SorterOptions): this {\r\n    this.options = {\r\n      ...this.options,\r\n      ...options,\r\n    };\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * set base element.\r\n   * @param  elm\r\n   * @return\r\n   */\r\n  setElement(elm: ElementTarget): this {\r\n    this.elm = getElement(elm) as HTMLElement;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * getItems\r\n   * @return\r\n   */\r\n  getItems(): HTMLElement[] {\r\n    return this.items;\r\n  }\r\n\r\n  /**\r\n   * set items that target for sort.\r\n   * @param  items\r\n   * @return\r\n   */\r\n  setItems(items: ItemsSettable): this {\r\n    if (this.elmIsTable()) {\r\n      this.items = getElementsAsArray('tbody tr', this.elm);\r\n    } else if (items === 'auto') {\r\n      this.items = nodeListToArray(this.elm.childNodes)\r\n        .filter(node => node.tagName) as HTMLElement[];\r\n    } else {\r\n      this.items = getElementsAsArray(items as ElementTarget, this.elm);\r\n    }\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Execute sort.\r\n   * @return\r\n   */\r\n  execute(): this {\r\n    this.elmIsTable() ? this.sortTable() : this.sortElements();\r\n    return this;\r\n  }\r\n\r\n  private elmIsTable() {\r\n    return this.elm.tagName === 'TABLE';\r\n  }\r\n\r\n  private sortElements() {\r\n    const compareMethod = (a: any, b: any): number => {\r\n      const aVal = this.getSortValue(a);\r\n      const bVal = this.getSortValue(b);\r\n      const type = this.getSortType(this.elm) || this.getSortType(a);\r\n      const asc = this.getSortDirection(this.elm) !== 'desc';\r\n      return this.compare(aVal, bVal, type, asc);\r\n    };\r\n    this.toggleSortDirection(this.elm);\r\n    this.sorting(this.items, compareMethod.bind(this));\r\n  }\r\n\r\n  private sortTable() {\r\n    const heads = getElementsAsArray('thead th', this.elm);\r\n    heads.forEach((head, i) => {\r\n      head.style.cursor = 'pointer'; // Set cursor style to `pointer`.\r\n      head.addEventListener('click', event => {\r\n        event.preventDefault();\r\n        const th = event.currentTarget as HTMLElement;\r\n        this.toggleSortDirection(th);\r\n        this.sortingTable(\r\n          this.items,\r\n          i + 1,\r\n          this.getSortType(th),\r\n          this.getSortDirection(th),\r\n        );\r\n      });\r\n    });\r\n  }\r\n\r\n  private sorting(items: HTMLElement[], compareMethod: (a: any, b: any) => number) {\r\n    items.sort(compareMethod);\r\n    items.forEach(item => {\r\n      const parent = item.parentNode;\r\n      parent.removeChild(item);\r\n      parent.appendChild(item);\r\n    });\r\n  }\r\n\r\n  private sortingTable(rows: HTMLElement[], nth: number, type: string, direction: string) {\r\n    const compareMethod = (a: HTMLElement, b: HTMLElement): number => {\r\n      a = getElement(`td:nth-child(${nth})`, a) as HTMLElement;\r\n      b = getElement(`td:nth-child(${nth})`, b) as HTMLElement;\r\n      const aVal = this.getSortValue(a);\r\n      const bVal = this.getSortValue(b);\r\n      type = type || this.getSortType(a);\r\n      const asc = direction === 'asc';\r\n      return this.compare(aVal, bVal, type, asc);\r\n    };\r\n    this.sorting(rows, compareMethod.bind(this));\r\n  }\r\n\r\n  private getSortValue(elm: HTMLElement): string {\r\n    let sortValue: any = elm.dataset[this.options.datasetName.sortValue];\r\n    if (!sortValue) {\r\n      sortValue = elm.textContent;\r\n    }\r\n    return sortValue.toUpperCase();\r\n  }\r\n\r\n  private getSortType(elm: HTMLElement): string|null {\r\n    return elm.dataset[this.options.datasetName.sortType] || null;\r\n  }\r\n\r\n  private getSortDirection(elm: HTMLElement): string {\r\n    return elm.dataset[this.options.datasetName.sortDirection];\r\n  }\r\n\r\n  private toggleSortDirection(elm: HTMLElement): void {\r\n    elm.dataset[this.options.datasetName.sortDirection]\r\n      = this.getSortDirection(elm) === 'asc' ? 'desc' : 'asc';\r\n  }\r\n\r\n  private compare(a: string, b: string, type: string, asc: boolean = true): number {\r\n    const compareNumber = (aVal: string, bVal: string): number => {\r\n      const aNum = parseFloat(aVal);\r\n      const bNum = parseFloat(b);\r\n      return asc ? aNum - bNum : bNum - aNum;\r\n    };\r\n    const compareDate = (aVal: string, bVal: string): number => {\r\n      const aDate = new Date(aVal);\r\n      const bDate = new Date(bVal);\r\n      return asc\r\n        ? aDate.getTime() - bDate.getTime()\r\n        : bDate.getTime() - aDate.getTime();\r\n    };\r\n\r\n    if (type === 'number') {\r\n      return compareNumber(a, b);\r\n    } else if (type === 'date') {\r\n      return compareDate(a, b);\r\n    } else {\r\n      // default: compare as string.\r\n      return asc ? a.localeCompare(b) : b.localeCompare(a);\r\n    }\r\n  }\r\n}\r\n","export * from './methods/base';\r\nexport * from './methods/util';\r\nexport * from './classes/element-filter';\r\nexport * from './classes/element-sorter';\r\n","export type ElementTarget = string|Element|NodeList;\r\n\r\nfunction resolveBase(base: Document|ElementTarget): Document|Element {\r\n  base = base === document ? base : getElement(base as ElementTarget);\r\n  if (!base) {\r\n    throw new ReferenceError(\"'base' element is not exist!\");\r\n  }\r\n  return base;\r\n}\r\n\r\n/**\r\n * Polyfill for Element.matches\r\n * @see https://developer.mozilla.org/en-US/docs/Web/API/Element/matches#polyfill\r\n */\r\nfunction polyfillForMatches(): void {\r\n  if (!Element.prototype.matches) {\r\n    Element.prototype.matches = Element.prototype.msMatchesSelector;\r\n  }\r\n}\r\n\r\n/**\r\n * Get element.\r\n * @param  selector querySelector\r\n * @param  base     base element. default is Document.\r\n * @return\r\n */\r\nexport function getElement(selector: ElementTarget, base: Document|ElementTarget = document): Element {\r\n  base = resolveBase(base);\r\n  if (typeof selector === 'string') {\r\n    return base.querySelector(selector);\r\n  } else if (selector instanceof Element) {\r\n    return selector;\r\n  } else if (selector instanceof NodeList) {\r\n    return selector[0] as Element;\r\n  } else {\r\n    throw new TypeError('selector is must be String or Element');\r\n  }\r\n}\r\n\r\n/**\r\n * Get elements as NodeList.\r\n * @param  selector querySelector\r\n * @param  base     base element. default is Document.\r\n * @return\r\n */\r\nexport function getElements(selector: ElementTarget, base: Document|ElementTarget = document): NodeList {\r\n  base = resolveBase(base);\r\n\r\n  if (typeof selector === 'string') {\r\n    return base.querySelectorAll(selector);\r\n  } else if (selector instanceof Element) {\r\n    return toNodeList(selector);\r\n  } else if (selector instanceof NodeList) {\r\n    return selector;\r\n  } else {\r\n    throw new TypeError('selector is must be String or NodeList');\r\n  }\r\n}\r\n\r\n/**\r\n * Get elements as array of HTMLElement.\r\n *\r\n * @param {ElementTarget} selector\r\n * @param {(Document|ElementTarget)} [base=document]\r\n * @returns {HTMLElement[]}\r\n */\r\nexport function getElementsAsArray(selector: ElementTarget, base: Document|ElementTarget = document): HTMLElement[] {\r\n  const nodeList = getElements(selector, base);\r\n  return nodeListToArray(nodeList) as HTMLElement[];\r\n}\r\n\r\n/**\r\n * Remove elements.\r\n * @param  selector querySelector\r\n * @param  base     base element. default is Document.\r\n * @return          number of removed.\r\n */\r\nexport function removeElements(selector: ElementTarget, base: Document|ElementTarget = document): number {\r\n  base = resolveBase(base);\r\n  const elms = getElementsAsArray(selector, base);\r\n  elms.forEach(elm => elm.parentElement.removeChild(elm));\r\n  return elms.length;\r\n}\r\n\r\n/**\r\n * Convert a single element to NodeList.\r\n * @param  elm\r\n * @return\r\n */\r\nexport function toNodeList(elm: Element|string): NodeList {\r\n  elm = getElement(elm);\r\n  elm.setAttribute('toNodeList', '');\r\n  const nodeList = document.querySelectorAll('[toNodeList]');\r\n  elm.removeAttribute('toNodeList');\r\n  return nodeList;\r\n}\r\n\r\n/**\r\n * Convert NodeList to Array.\r\n * @param  list\r\n * @return\r\n */\r\nexport function nodeListToArray(list: NodeList|any[]|string): any[] {\r\n  if (Array.isArray(list)) {\r\n    return list;\r\n  } else {\r\n    list = getElements(list);\r\n    return [].slice.call(list);\r\n  }\r\n}\r\n\r\n/**\r\n * Find ancestor element.\r\n * @param  self\r\n * @param  ancestor\r\n * @return          Element or null.\r\n */\r\nexport function findAncestor(self: ElementTarget, ancestor: ElementTarget): Element|null {\r\n  polyfillForMatches();\r\n  self = getElement(self);\r\n  const isMatch = (elm: Element): boolean => ancestor instanceof Element\r\n    ? elm === ancestor\r\n    : elm.matches(ancestor as string);\r\n\r\n  do {\r\n    if (self == null || self.parentElement == null) {\r\n      return null;\r\n    }\r\n\r\n    self = self.parentElement;\r\n  } while (!isMatch(self));\r\n  return self;\r\n}\r\n","import * as baseMethods from './base';\r\n\r\ntype ElementTarget = baseMethods.ElementTarget;\r\n\r\n/**\r\n * Add event listener on every selected elements.\r\n * @param  selector   querySelector\r\n * @param  type       event-type\r\n * @param  listener   listener\r\n * @param  useCapture default is false\r\n * @return            number of affected\r\n */\r\nexport function addListener(\r\n  selector: ElementTarget,\r\n  type: string,\r\n  listener: EventListener,\r\n  useCapture: boolean = false,\r\n): number {\r\n\r\n  const elms = baseMethods.getElementsAsArray(selector);\r\n  elms.forEach(elm => elm.addEventListener(type, listener, useCapture));\r\n  return elms.length;\r\n}\r\n\r\n/**\r\n * Wrapping each element.\r\n * @param selector  querySelector\r\n * @param className wrapper's class name.\r\n * @param tagName   wrapper's tag name, default is 'div'.\r\n */\r\nexport function wrap(\r\n  selector: ElementTarget,\r\n  className: string,\r\n  tagName: string = 'div',\r\n): void {\r\n\r\n  const elms = baseMethods.getElementsAsArray(selector);\r\n  for (const elm of elms) {\r\n    const parent = elm.parentNode;\r\n    const sibling = elm.nextSibling;\r\n    const div = document.createElement(tagName);\r\n    addClass(div, className);\r\n    div.appendChild(elm);\r\n\r\n    if (sibling) {\r\n      parent.insertBefore(div, sibling);\r\n    } else {\r\n      parent.appendChild(div);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * Wrapping all elements inside a one wrapper.\r\n * @param selector  querySelector\r\n * @param className wrapper's class name.\r\n * @param tagName   wrapper's tag name, default is 'div'.\r\n */\r\nexport function wrapAll(\r\n  selector: ElementTarget,\r\n  className: string,\r\n  tagName: string = 'div',\r\n): void {\r\n\r\n  const elms = baseMethods.getElementsAsArray(selector);\r\n  const parent = elms[0].parentNode;\r\n  const preSibling = elms[0].previousSibling;\r\n  const div = document.createElement(tagName);\r\n  addClass(div, className);\r\n\r\n  for (const elm of elms) {\r\n    div.appendChild(elm);\r\n  }\r\n\r\n  if (preSibling) {\r\n    parent.insertBefore(div, preSibling.nextSibling);\r\n  } else {\r\n    parent.appendChild(div);\r\n  }\r\n}\r\n\r\n/**\r\n * Add confirm message listener when 'submit' event.\r\n * @param selector querySelector, form element probably.\r\n * @param message  confirm message.\r\n */\r\nexport function submitConfirm(selector: ElementTarget, message: string = 'Are you confirm?'): void {\r\n  addListener(selector, 'submit', e => {\r\n    if (!confirm(message)) {\r\n      e.preventDefault();\r\n    }\r\n  }, true); // this use capture.\r\n}\r\n\r\n/**\r\n * Add class to element.\r\n * @param selector  querySelector\r\n * @param className class name. If you want give multiple classes, separates classes by whitespace. e.g. 'first second'\r\n */\r\nexport function addClass(selector: ElementTarget, className: string): void {\r\n  const elm = baseMethods.getElement(selector);\r\n  const classes = className.split(' ');\r\n  classes.forEach(c => elm.classList.add(c));\r\n}\r\n\r\n/**\r\n * Remove class from element.\r\n * @param selector  querySelector\r\n * @param className class name. If you want give multiple classes, separates classes by whitespace. e.g. 'first second'\r\n */\r\nexport function removeClass(selector: ElementTarget, className: string): void {\r\n  const elm = baseMethods.getElement(selector);\r\n  const classes = className.split(' ');\r\n  classes.forEach(c => elm.classList.remove(c));\r\n}\r\n\r\n/**\r\n * Toggling class to element.\r\n * @param selector  querySelector\r\n * @param className class name. If you want give multiple classes, separates classes by whitespace. e.g. 'first second'\r\n */\r\nexport function toggleClass(selector: ElementTarget, className: string): void {\r\n  const elm = baseMethods.getElement(selector);\r\n  const classes = className.split(' ');\r\n  classes.forEach(c => elm.classList.toggle(c));\r\n}\r\n\r\n/**\r\n * Hide element. It will set element's display to 'none'.\r\n * @param selector querySelector\r\n */\r\nexport function hide(selector: ElementTarget): void {\r\n  const elm = baseMethods.getElement(selector) as HTMLElement;\r\n  elm.style.display = 'none';\r\n}\r\n\r\n/**\r\n * Show element. It will just remove 'display=none;'.\r\n * @param selector querySelector\r\n */\r\nexport function show(selector: ElementTarget): void {\r\n  const elm = baseMethods.getElement(selector) as HTMLElement;\r\n  if (elm.style.display && elm.style.display === 'none') {\r\n    elm.style.display = '';\r\n  }\r\n}\r\n\r\n/**\r\n * Toggling show/hide element.\r\n * @param selector querySelector\r\n */\r\nexport function toggleShow(selector: ElementTarget): void {\r\n  const elm = baseMethods.getElement(selector) as HTMLElement;\r\n  elm.style.display !== 'none' ? hide(elm) : show(elm);\r\n}\r\n\r\n/**\r\n * Make a hidden input.\r\n * @param  name  name attribute.\r\n * @param  value value attribute.\r\n * @return\r\n */\r\nexport function makeHiddenInput(name: string, value: string): HTMLInputElement {\r\n  const input = document.createElement('input');\r\n  input.type = 'hidden';\r\n  input.name = name;\r\n  input.value = value;\r\n  return input;\r\n}\r\n\r\n/**\r\n * Makes hidden input, and append to target element. If input[name=\"..\"] already exists, overwrite it.\r\n * @param target querySelector\r\n * @param name   name attribute.\r\n * @param value  value attribute.\r\n */\r\nexport function appendHiddenInput(target: ElementTarget, name: string, value: string): void {\r\n  const targetElm = baseMethods.getElement(target);\r\n\r\n  // Remove if already has input.\r\n  baseMethods.removeElements(`input[name=\"${name}\"]`, target);\r\n  targetElm.appendChild(makeHiddenInput(name, value));\r\n}\r\n"],"sourceRoot":""}